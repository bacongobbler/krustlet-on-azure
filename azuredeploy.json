{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/bacongobbler/krustlet-on-azure/main/."
			},
			"defaultValue": "https://raw.githubusercontent.com/bacongobbler/krustlet-on-azure/main/"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring",
			"defaultValue": "",
			"metadata": {
				"description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "krustlet",
			"metadata": {
				"description": "The administrator username you will use to log on to the virtual machines."
			}
		},
		"sshPublicKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH public key for SSH'ing into the virtual machines."
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "The region where the cluster will be deployed."
			}
		},
		"krustletURL": {
			"type": "string",
			"defaultValue": "https://krustlet.blob.core.windows.net/releases/krustlet-canary-linux-amd64.tar.gz",
			"metadata": {
				"description": "URL to a Krustlet release archive."
			}
		},
		"virtualMachineSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"metadata": {
				"description": "This is the Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
			}
		},
		"kubernetesVersion": {
			"defaultValue": "1.17.11",
			"type": "string",
			"metadata": {
				"description": "Determines which version of Kubernetes will be deployed."
			}
		}
	},
	"variables": {
		"clusterName": "krustlet",
		"imageOffer": "UbuntuServer",
		"imagePublisher": "Canonical",
		"linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [
					{
						"keyData": "[parameters('sshPublicKey')]"
					}
				]
			}
		},
		"nicName": "krustletVMNic",
		"nsgName": "krustletNSG",
		"publicIPAddressName": "uniqueString(resourceGroup().id)",
		"routeTableName": "aks-routetable",
		"subnetName": "aks-subnet",
		"subnetPrefix": "10.240.0.0/16",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]",
		"ubuntuOSVersion": "18.04-LTS",
		"virtualNetworkName": "aks-vnet",
		"vmName": "krustlet-wasi"
	},
	"resources": [
		{
			"name": "[concat(variables('vmName'),'/newuserscript')]",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2018-06-01",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[uri(parameters('_artifactsLocation'), concat('install_krustlet.sh', parameters('_artifactsLocationSasToken')))]"
					],
					"commandToExecute": "[concat('bash install_krustlet.sh', ' ', parameters('krustletURL'))]"
				}
			}
		},
		{
			"name": "[variables('vmName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2018-06-01",
			"location": "[parameters('location')]",
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"linuxConfiguration": "[variables('linuxConfiguration')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('ubuntuOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"caching": "ReadWrite",
						"createOption": "FromImage",
						"diskSizeGB": 100
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.ContainerService/managedClusters",
			"apiVersion": "2020-09-01",
			"name": "[variables('clusterName')]",
			"location": "[parameters('location')]",
			"properties": {
				"kubernetesVersion": "[parameters('kubernetesVersion')]",
				"dnsPrefix": "[uniqueString(resourceGroup().id)]",
				"agentPoolProfiles": [
					{
						"name": "nodepool1",
						"count": 3,
						"vmSize": "[parameters('virtualMachineSize')]",
						"osDiskSizeGB": 128,
						"osDiskType": "Managed",
						"maxPods": 110,
						"type": "VirtualMachineScaleSets",
						"orchestratorVersion": "[parameters('kubernetesVersion')]",
						"enableNodePublicIP": false,
						"nodeLabels": {},
						"mode": "System",
						"osType": "Linux"
					}
				],
				"linuxProfile": {
					"adminUsername": "[parameters('adminUsername')]",
					"ssh": "[variables('linuxConfiguration').ssh]"
				},
				"networkProfile": {
					"networkPlugin": "kubenet",
					"loadBalancerSku": "standard",
					"loadBalancerProfile": {
						"managedOutboundIPs": {
							"count": 1
						},
						"effectiveOutboundIPs": [
							{
								"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
							}
						]
					},
					"podCidr": "10.244.0.0/16",
					"serviceCidr": "10.0.0.0/16",
					"dnsServiceIP": "10.0.0.10",
					"dockerBridgeCidr": "172.17.0.1/16",
					"outboundType": "loadBalancer"
				}
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[parameters('nicName')]",
			"location": "[parameters('location')]",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfigkrustlet",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
							},
							"primary": true,
							"privateIPAddressVersion": "IPv4"
						}
					}
				],
				"dnsSettings": {
					"dnsServers": []
				},
				"enableAcceleratedNetworking": false,
				"enableIPForwarding": false,
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
				}
			}
		},
		{
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('nsgName'), '/default-allow-ssh')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
		},
		{
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/8"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-05-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"tags": {
				"owner": "kubernetes",
				"type": "aks-slb-managed-outbound-ip"
			},
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAllocationMethod": "Dynamic"
			}
		}
	]
}
